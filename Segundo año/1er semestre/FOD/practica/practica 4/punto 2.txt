b. Suponga que cada nodo del árbol B cuenta con un tamaño de 512 bytes. ¿Cuál
sería el orden del árbol B (valor de M) que se emplea como índice? Asuma que
los números enteros ocupan 4 bytes. Para este inciso puede emplear una fórmula
similar al punto 1b, pero considere además que en cada nodo se deben
almacenar los M-1 enlaces a los registros correspondientes en el archivo de
datos.

formula= N = (M-1) * A + M * B + C

512= (M-1) * 4 + M * 4 + 4 + (M-1) * 4 (nodo=elementos+hijos+cantClaves+enlacesIndice)

512= 4m - 4 + 4m + 4 +4m - 4
512= 12m-4
508=12m
508/12=m
42=m


c. ¿Qué implica que el orden del árbol B sea mayor que en el caso del ejercicio 1?
	Que el arbol va a ser mas ancho, y por ende menos alto

d. Describa con sus palabras el proceso para buscar el alumno con el DNI 12345678
usando el índice definido en este punto.
	
	Va a empezar en la raiz y va a ir comparando con la clave de cada nodo si es mayor o menor, si es mayor al numero actual pero hay mas en el nodo sigue comparando, sino iria al hijo izq, si se acaban los elementos va al derecho
	asi descartando los valores menores, hasta encontrar el valor o un actual que sea mayor al numero porq significa que no esta ya que los demas siguen siendo mas grandes

e. ¿Qué ocurre si desea buscar un alumno por su número de legajo? ¿Tiene sentido
usar el índice que organiza el acceso al archivo de alumnos por DNI? ¿Cómo
haría para brindar acceso indizado al archivo de alumnos por número de legajo?

habria que comparar alumno por alumno, no cumple el orden. Se deberia cambiar todas las claves del arbol y que sean legajos

f. Suponga que desea buscar los alumnas que tienen DNI en el rango entre
40000000 y 45000000. ¿Qué problemas tiene este tipo de búsquedas con apoyo
de un árbol B que solo provee acceso indizado por DNI al archivo de alumnos?

que el arbol va a ir para un lado o el otro, creo que se repetirian comparaciones, depende xd es mas para encontrar uno 





